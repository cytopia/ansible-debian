sudo: required

language: python

services:
  - docker

env:
  matrix:
    ###
    ### Debian stretch
    ###
    # All roles (playbook order)
    - single=0 random=0 dist=debian-stretch
    # All roles (random order)
    - single=0 random=1 dist=debian-stretch
    # Start each role separately
    - single=1 random=0 dist=debian-stretch

    ###
    ### Debian testing
    ###
    # All roles (playbook order)
    - single=0 random=0 dist=debian-testing
    # All roles (random order)
    - single=0 random=1 dist=debian-testing
    # Start each role separately
    - single=1 random=0 dist=debian-testing

    ###
    ### Cytopia's profile: stretch
    ###
    # All roles (playbook order)
    - single=0 random=0 dist=cytopia-stretch
    # All roles (random order)
    - single=0 random=1 dist=cytopia-stretch
    # Start each role separately
    - single=1 random=0 dist=cytopia-stretch

    ###
    ### Cytopia's profile: testing
    ###
    # All roles (playbook order)
    - single=0 random=0 dist=cytopia-testing
    # All roles (random order)
    - single=0 random=1 dist=cytopia-testing
    # Start each role separately
    - single=1 random=0 dist=cytopia-testing


before_script:
  # Run it multiple times until it succeeds. This is to prevent errors that occur due to
  # network timeouts between travis-ci
  - max=100; i=0; while [ $i -lt $max ]; do if docker build -t ansible-debian .; then break; else i=$((i+1)); fi done

script:
  # 1. Run it multiple times until it succeeds. This is to prevent errors that occur due to network timeouts between travis-ci
  # 2. Separate between single runs and full runs
  - if [ "${single}" = "1" ]; then
        ROLES="$( for d in $(/bin/ls roles/); do if [ -d roles/${d} ]; then echo $d; fi done | grep -vE '*-meta$' | sort -R )";
        TOTAL="$( echo "${ROLES}" | wc -l )";
        START=1;
        for r in ${ROLES}; do
            printf "========== Run %s / %s (%s) ==========\n" "${START}" "${TOTAL}" "${r}";
            max=10; i=0; while [ $i -lt $max ]; do
                if ./docker-run.sh -l ${dist} -t ${r} -t ansible-debian; then
                    break;
                else
                    i=$((i+1));
                fi;
            done;
            if [ $i -gt 8 ]; then false; fi;
            START=$((START+1));
        done;
    else
        ./docker-run.sh -l ${dist} -r ${random} -t ansible-debian;
    fi
